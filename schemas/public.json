{
	"openapi": "3.0.0",
	"info": {
		"title": "Digesto Municipal",
		"description": "Manage User, docs, words",
		"version": "1.6.0",
		"x-logo": {
			"url": "https://public.arpi.ar/digesto_municipal_logo.png",
			"altText": "Digesto Municipal"
		}
	},
	"tags": [
		{
			"name": "User",
			"description": "For managing User"
		},
		{
			"name": "Area",
			"description": "For managing Area"
		},
		{
			"name": "Legislation",
			"description": "For managing Legislation"
		},
		{
			"name": "Document",
			"description": "For managing Document"
		}
	],
	"servers": [
		{
			"url": "--*TODAVIA NO HAY SERVER DE PROD*--",
			"description": "The Prod API server",
			"variables": {
				"environment": {
					"default": "prod"
				}
			}
		},
		{
			"url": "https://digesto-api.com2.ar",
			"description": "The QA API server",
			"variables": {
				"environment": {
					"default": "qa"
				}
			}
		},
		{
			"url": "localhost:7020",
			"description": "The Local API server",
			"variables": {
				"environment": {
					"default": "local"
				}
			}
		}
	],
	"paths": {
		"/api/legislation/create-legislation": {
			"post": {
				"operationId": "createLegislation",
				"tags": [
					"Legislation"
				],
				"summary": "Create a legislation",
				"security": [
					{
						"ApiKey": []
					}
				],
				"requestBody": {
					"description": "create legislation",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Legislation"
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/SuccessCreateLegislationResponse"
					},
					"400": {
						"$ref": "#/components/responses/BadRequest"
					},
					"500": {
						"$ref": "#/components/responses/InternalError"
					}
				}
			}
		},
		"/api/legislation/delete-legislation/{id}": {
			"delete": {
				"operationId": "deleteLegislation",
				"tags": [
					"Legislation"
				],
				"summary": "Delete a legislation",
				"security": [
					{
						"ApiKey": []
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/SuccessDeleteLegislationResponse"
					},
					"400": {
						"$ref": "#/components/responses/BadRequest"
					},
					"500": {
						"$ref": "#/components/responses/InternalError"
					}
				}
			}
		},
		"/api/legislation/get-legislations": {
			"get": {
				"operationId": "getLegislations",
				"tags": [
					"Legislation"
				],
				"summary": "get all legislations",
				"security": [
					{
						"ApiKey": []
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/SuccessGetAllLegislationsResponse"
					},
					"404": {
						"$ref": "#/components/responses/notFoundLegislationsResponse"
					},
					"500": {
						"$ref": "#/components/responses/InternalError"
					}
				}
			}
		},
		"/api/area/create-keyword/{idArea}": {
			"post": {
				"operationId": "createKeyword",
				"tags": [
					"Area"
				],
				"summary": "Create a keyword",
				"security": [
					{
						"ApiKey": [],
						"ApiSecret": []
					}
				],
				"requestBody": {
					"description": "Create a keyword in database",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateKeyword"
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/succesCreateKeywordResponse"
					},
					"400": {
						"$ref": "#/components/responses/BadRequest"
					},
					"500": {
						"$ref": "#/components/responses/InternalError"
					}
				}
			}
		},
		"/api/area/create": {
			"post": {
				"operationId": "createArea",
				"tags": [
					"Area"
				],
				"summary": "Create a area",
				"security": [
					{
						"ApiKey": [],
						"ApiSecret": []
					}
				],
				"requestBody": {
					"description": "Create a area in database",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateArea"
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/successCreateAreaResponse"
					},
					"400": {
						"$ref": "#/components/responses/BadRequest"
					},
					"500": {
						"$ref": "#/components/responses/InternalError"
					}
				}
			}
		},
		"/api/area/delete/{id}": {
			"delete": {
				"operationId": "deleteArea",
				"tags": [
					"Area"
				],
				"summary": "Delete an area",
				"security": [
					{
						"ApiKey": []
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/SuccessDeleteAreaResponse"
					},
					"400": {
						"$ref": "#/components/responses/BadRequest"
					},
					"500": {
						"$ref": "#/components/responses/InternalError"
					}
				}
			}
		},
		"/api/area/get-areas": {
			"get": {
				"operationId": "getAreas",
				"tags": [
					"Area"
				],
				"summary": "get all areas",
				"security": [
					{
						"ApiKey": []
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/SuccessGetAllAreasResponse"
					},
					"404": {
						"$ref": "#/components/responses/notFoundAreasResponse"
					},
					"500": {
						"$ref": "#/components/responses/InternalError"
					}
				}
			}
		},
		"/api/document/create": {
			"post": {
				"operationId": "createDocument",
				"tags": [
					"Document"
				],
				"summary": "Create a document",
				"security": [
					{
						"ApiKey": []
					}
				],
				"requestBody": {
					"description": "create document",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Document"
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/SuccessCreateDocumentResponse"
					},
					"400": {
						"$ref": "#/components/responses/BadRequest"
					},
					"500": {
						"$ref": "#/components/responses/InternalError"
					}
				}
			}
		},
		"/api/document/get": {
			"get": {
				"operationId": "getDocument",
				"tags": [
					"Document"
				],
				"summary": "Get a documents",
				"security": [
					{
						"ApiKey": []
					}
				],
				"requestBody": {
					"description": "get documents",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FieldsToFilter"
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/SuccessGetDocumentsResponse"
					},
					"400": {
						"$ref": "#/components/responses/BadRequest"
					},
					"500": {
						"$ref": "#/components/responses/InternalError"
					}
				}
			}
		},
		"/api/document/save-file?fileName={id}": {
			"post": {
				"operationId": "saveFileDocument",
				"tags": [
					"Document"
				],
				"summary": "Save a document",
				"description": "Este endpoint se encarga de guardar un archivo en el servidor. El escenario ideal es que se ejecute despues del EP */document/create* para obtener el id del documento creado, por lo tanto se le pasa por parametro a *fileName* el id mencionado.",
				"security": [
					{
						"ApiKey": []
					}
				],
				"requestBody": {
					"description": "save document",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SaveFile"
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/SuccessCreateDocumentResponse"
					},
					"400": {
						"$ref": "#/components/responses/BadRequest"
					},
					"500": {
						"$ref": "#/components/responses/InternalError"
					}
				}
			}
		},
		"/api/user/change-pass": {
			"put": {
				"operationId": "changeUserPassword",
				"tags": [
					"User"
				],
				"summary": "Change user password",
				"security": [
					{
						"ApiKey": []
					}
				],
				"requestBody": {
					"description": "Change the password of a user",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ChangeUserPassword"
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/SuccessChangeUserPasswordResponse"
					},
					"400": {
						"$ref": "#/components/responses/BadRequest"
					},
					"500": {
						"$ref": "#/components/responses/InternalError"
					}
				}
			}
		},
		"/api/user/create-collaborator": {
			"post": {
				"operationId": "createCollaborator",
				"tags": [
					"User"
				],
				"summary": "Create a collaborator user",
				"security": [
					{
						"ApiKey": []
					}
				],
				"requestBody": {
					"description": "create collaborator user",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CollaboratorUser"
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/SuccessCreateCollaboratorResponse"
					},
					"400": {
						"$ref": "#/components/responses/BadRequest"
					},
					"500": {
						"$ref": "#/components/responses/InternalError"
					}
				}
			}
		},
		"/api/user/delete-user/{id}": {
			"delete": {
				"operationId": "deleteUSer",
				"tags": [
					"User"
				],
				"summary": "Delete a User",
				"security": [
					{
						"ApiKey": []
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/SuccessDeleteUserResponse"
					},
					"404": {
						"$ref": "#/components/responses/notFoundUsersResponse"
					},
					"500": {
						"$ref": "#/components/responses/InternalError"
					}
				}
			}
		},
		"/api/user/edit-collaborator/{id}": {
			"post": {
				"operationId": "editCollaborator",
				"tags": [
					"User"
				],
				"summary": "Edit a collaborator user",
				"security": [
					{
						"ApiKey": []
					}
				],
				"requestBody": {
					"description": "edit collaborator user",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CollaboratorUserEdit"
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/SuccessEditCollaboratorResponse"
					},
					"400": {
						"$ref": "#/components/responses/BadRequest"
					},
					"500": {
						"$ref": "#/components/responses/InternalError"
					}
				}
			}
		},
		"/api/user/change-pass-forgot": {
			"put": {
				"operationId": "changePassForgot",
				"tags": [
					"User"
				],
				"summary": "Change Forgot password",
				"security": [
					{
						"ApiKey": []
					}
				],
				"description": "Este EP se ejecuta cuando el usuario desea recuperar su contraseña. Debe recibir el token que genera el EP **/api/user/forgot-pass**",
				"requestBody": {
					"description": "change Forgot the password of a user",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ChangeForgotUserPassword"
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/SuccesChangePasswordForgot"
					},
					"400": {
						"$ref": "#/components/responses/BadRequest"
					},
					"500": {
						"$ref": "#/components/responses/InternalError"
					}
				}
			}
		},
		"/api/user/forgot-pass": {
			"post": {
				"operationId": "forgotUserPassword",
				"tags": [
					"User"
				],
				"summary": "Forgot password",
				"security": [
					{
						"ApiKey": []
					}
				],
				"requestBody": {
					"description": "Forgot the password of a user",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ForgotUserPassword"
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/SuccesForgotPassword"
					},
					"400": {
						"$ref": "#/components/responses/BadRequest"
					},
					"500": {
						"$ref": "#/components/responses/InternalError"
					}
				}
			}
		},
		"/api/user/get-users": {
			"get": {
				"operationId": "getUsers",
				"tags": [
					"User"
				],
				"summary": "Get users",
				"security": [
					{
						"ApiKey": []
					}
				],
				"responses": {
					"200": {
						"$ref": "#/components/responses/SuccesGetUsersResponse"
					},
					"404": {
						"$ref": "#/components/responses/notFoundUsersResponse"
					},
					"500": {
						"$ref": "#/components/responses/InternalError"
					}
				}
			}
		},
		"/api/user/login": {
			"post": {
				"operationId": "loginUser",
				"tags": [
					"User"
				],
				"summary": "Login a user",
				"security": [
					{
						"ApiKey": [],
						"ApiSecret": []
					}
				],
				"requestBody": {
					"description": "The login",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginUser"
							}
						}
					}
				},
				"responses": {
					"200": {
						"$ref": "#/components/responses/SuccessLoginResponse"
					},
					"400": {
						"$ref": "#/components/responses/BadRequest"
					},
					"401": {
						"$ref": "#/components/responses/Unauthorized"
					},
					"403": {
						"$ref": "#/components/responses/Forbidden"
					},
					"500": {
						"$ref": "#/components/responses/InternalError"
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"id": {
				"description": "The unique identifier of the item",
				"type": "string",
				"readOnly": true,
				"example": "d555345345345as67a342a"
			},
			"password": {
				"description": "The password for the user",
				"type": "string",
				"example": "Uv13qwer67pLkj"
			},
			"status": {
				"description": "The item status",
				"type": "string",
				"default": "active",
				"enum": [
					"active",
					"inactive"
				],
				"example": "active"
			},
			"dateCreated": {
				"description": "The date of creation",
				"type": "string",
				"format": "date-time",
				"readOnly": true,
				"example": "2019-07-12T19:59:51.801Z"
			},
			"dateModified": {
				"description": "The date of the last modification",
				"type": "string",
				"format": "date-time",
				"readOnly": true,
				"example": "2019-07-20T19:59:51.801Z"
			},
			"dateCreatedDay": {
				"description": "The day of creation",
				"type": "string",
				"format": "date-time",
				"readOnly": true,
				"example": "2019-07-12T19:59:51.801Z"
			},
			"dateModifiedDay": {
				"description": "The day of last modification",
				"type": "string",
				"format": "date-time",
				"readOnly": true,
				"example": "2019-07-12T19:59:51.801Z"
			},
			"userCreated": {
				"description": "The ID of the user who created the item. This refer to the `id` of the **User** Entity of **Janis ID Service**. See [User](/v2/service/id#tag/User).",
				"type": "string",
				"readOnly": true,
				"example": "6a1fc1eeb5b68406e0487a10"
			},
			"userModified": {
				"description": "The ID of the user who last modified the item. This refer to the `id` of the **User** Entity of **Janis ID Service**. See [User](/v2/service/id#tag/User).",
				"type": "string",
				"readOnly": true,
				"example": "7e1fc1eeb5b68406e048796"
			},
			"accountsIds": {
				"description": "The Related Account's IDs. This refer to the `id` of the **Account** Entity. See [Account](/v2/service/commerce#tag/Account).",
				"type": "array",
				"items": {
					"type": "string"
				},
				"example": [
					"1a1fc1eeb5b68406e0487a01",
					"1a1fc1eeb5b68406e0487a00"
				]
			},
			"accountsReferenceIds": {
				"description": "The Related Account's Reference IDs. This refer to the `referenceId` of the **Account** Entity. See [Account](/v2/service/commerce#tag/Account).",
				"type": "array",
				"items": {
					"type": "string"
				},
				"example": [
					"account-acc-01",
					"account-acc-02"
				]
			},
			"Legislation": {
				"description": "Una legislacion",
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/id"
					},
					"type": {
						"description": "tipo de legislacion",
						"type": "string",
						"example": "ejemplo1"
					},
					"status": {
						"$ref": "#/components/schemas/status"
					}
				},
				"required": [
					"type"
				]
			},
			"DeleteLegislation": {
				"description": "legislation delete",
				"type": "object",
				"properties": {
					"status": {
						"$ref": "#/components/schemas/status"
					}
				},
				"required": [
					"status"
				]
			},
			"Area": {
				"description": "Un area",
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/id"
					},
					"name": {
						"description": "El nombre del area que se va a utilzar para filtrar",
						"type": "string",
						"example": "Salud"
					},
					"keywords": {
						"description": "Esta variable almacena todas las palabras especi",
						"type": "array",
						"example": [
							"vacunacion",
							"covid"
						]
					},
					"status": {
						"$ref": "#/components/schemas/status"
					}
				}
			},
			"CreateArea": {
				"description": "Creación de un area.",
				"type": "object",
				"properties": {
					"name": {
						"$ref": "#/components/schemas/Area/properties/name"
					},
					"keywords": {
						"$ref": "#/components/schemas/Area/properties/keywords"
					}
				},
				"required": [
					"name"
				]
			},
			"CreateKeyword": {
				"description": "Creacion de una palabra clave para un area en especifico.",
				"type": "object",
				"properties": {
					"keyword": {
						"description": "El nombre de la palabra clave que se va a guardar.",
						"type": "string",
						"example": "vacunacion"
					}
				},
				"required": [
					"keyword"
				]
			},
			"Document": {
				"description": "Un documento",
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/id"
					},
					"numero": {
						"description": "Número del documento",
						"type": "string",
						"example": 1
					},
					"serie": {
						"description": "Serie del documento",
						"type": "string",
						"example": "serie del documento"
					},
					"anioSancion": {
						"description": "Anio de sancion del documento",
						"type": "string",
						"example": "2018"
					},
					"fechaSancion": {
						"description": "Fecha de sancion del documento",
						"type": "date",
						"example": "2018-09-12 03:00:00.000Z"
					},
					"numeroExpediente": {
						"description": "Numero del expediente del documento",
						"type": "string",
						"example": "90"
					},
					"numeroDecreto": {
						"description": "Numero de decreto del documento",
						"type": "string",
						"example": "123"
					},
					"anioPromulgacion": {
						"description": "Anio de promulgacion del documento",
						"type": "string",
						"example": "2004"
					},
					"tipoLegislacion": {
						"description": "Tipo de legislacion del documento. Ver [Legislation](/v2/service/catalog#tag/Legislation) para mas informacion.",
						"type": "string",
						"example": "salud"
					},
					"fechaPromulgacion": {
						"description": "Fecha de promulgacion del documento",
						"type": "date",
						"example": "2018-09-12 03:00:00.000Z"
					},
					"fechaBoletin": {
						"description": "Fecha del boletin del documento",
						"type": "string",
						"example": "2018-09-12 03:00:00.000Z"
					},
					"numeroBoletin": {
						"description": "Numero de boletin del documento",
						"type": "string",
						"example": "3"
					},
					"asunto": {
						"description": "Asunto del documento",
						"type": "string",
						"example": "Interno"
					},
					"area": {
						"description": "Area del documento. Ver [Area](/v2/service/catalog#tag/Area) para mas informacion.",
						"type": "string",
						"example": "Salud"
					},
					"aclaraciones": {
						"description": "Aclaraciones del documento",
						"type": "string",
						"example": "una aclaracion muy buena"
					},
					"palabrasClave": {
						"description": "Palabras clave del documento. Estas palabras claves, pertenecen a las areas. Por lo tanto, para mas informacion ver [Area](/v2/service/catalog#tag/Area)",
						"type": "array",
						"example": [
							"covid",
							"vacunacion"
						]
					},
					"savePath": {
						"description": "Path de donde esta guardado el documento.",
						"type": "string",
						"example": "/doc/public/623ccc0c3a7d0706459c3c97.pdf"
					},
					"status": {
						"$ref": "#/components/schemas/status"
					}
				},
				"required": [
					"numero",
					"serie",
					"anioSancion",
					"fechaSancion",
					"numeroExpediente",
					"numeroDecreto",
					"anioPromulgacion",
					"tipoLegislacion",
					"fechaPromulgacion",
					"fechaBoletin",
					"numeroBoletin",
					"asunto",
					"area",
					"aclaraciones",
					"savePath"
				]
			},
			"SaveFile": {
				"description": "Guardar archivo",
				"type": "string",
				"example": "623ccc0c3a7d0706459c3c97.pdf"
			},
			"FieldsToFilter": {
				"description": "Campos que se van a utilizar para filtrar documentos",
				"type": "object",
				"properties": {
					"numero": {
						"$ref": "#/components/schemas/Document/properties/numero"
					},
					"anioSancion": {
						"$ref": "#/components/schemas/Document/properties/anioSancion"
					},
					"numeroExpediente": {
						"$ref": "#/components/schemas/Document/properties/numeroExpediente"
					},
					"tipoLegislacion": {
						"$ref": "#/components/schemas/Document/properties/tipoLegislacion"
					},
					"asunto": {
						"$ref": "#/components/schemas/Document/properties/asunto"
					},
					"area": {
						"$ref": "#/components/schemas/Document/properties/area"
					},
					"palabrasClave": {
						"$ref": "#/components/schemas/Document/properties/palabrasClave"
					}
				}
			},
			"User": {
				"description": "Un usuario",
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/id"
					},
					"name": {
						"description": "El nombre del usuario",
						"type": "string",
						"example": "Peter"
					},
					"lastname": {
						"description": "El apellido del usuario",
						"type": "string",
						"example": "Parker"
					},
					"email": {
						"description": "El email del usuario",
						"type": "string",
						"example": "peterparker@spiderman.com"
					},
					"password": {
						"description": "La contraseña del usuario, que está encriptada con bcrypt.",
						"type": "string",
						"example": "$2b$12$WGI2R5P.MzTDAl6vS3s5JuaX6NgB0cqHGkozfKdkC4FsHoMHvAgQ6"
					},
					"status": {
						"$ref": "#/components/schemas/status"
					},
					"isAdmin": {
						"description": "Esta variable indica si el usuario es admin o no. En caso de false es colaborador",
						"type": "boolean",
						"example": true
					}
				}
			},
			"LoginUser": {
				"description": "Logueo de user",
				"type": "object",
				"properties": {
					"email": {
						"$ref": "#/components/schemas/User/properties/email"
					},
					"password": {
						"$ref": "#/components/schemas/User/properties/password"
					}
				},
				"required": [
					"email",
					"password"
				]
			},
			"CollaboratorUser": {
				"description": "Creacion usuario colaborador",
				"type": "object",
				"properties": {
					"name": {
						"$ref": "#/components/schemas/User/properties/email"
					},
					"lastname": {
						"$ref": "#/components/schemas/User/properties/lastname"
					},
					"email": {
						"$ref": "#/components/schemas/User/properties/email"
					},
					"isAdmin": {
						"$ref": "#/components/schemas/User/properties/isAdmin"
					}
				},
				"required": [
					"name",
					"lastname",
					"email"
				]
			},
			"CollaboratorUserEdit": {
				"description": "Edicion usuario colaborador",
				"type": "object",
				"properties": {
					"name": {
						"$ref": "#/components/schemas/User/properties/name"
					},
					"lastname": {
						"$ref": "#/components/schemas/User/properties/lastname"
					},
					"email": {
						"$ref": "#/components/schemas/User/properties/email"
					},
					"isAdmin": {
						"$ref": "#/components/schemas/User/properties/isAdmin"
					}
				},
				"required": [
					"name",
					"lastname",
					"email"
				]
			},
			"ChangeUserPassword": {
				"description": "Endpoint para cambiar la contraseña de un usuario",
				"type": "object",
				"properties": {
					"email": {
						"$ref": "#/components/schemas/User/properties/email"
					},
					"password": {
						"$ref": "#/components/schemas/User/properties/password"
					},
					"newPassword": {
						"description": "La nueva contraseña que se va a actualizar",
						"type": "string",
						"example": "thebatman"
					}
				},
				"required": [
					"email",
					"password",
					"newPassword"
				]
			},
			"ForgotUserPassword": {
				"description": "Endpoint que se utiliza para enviar un email al usuario para cambiar su password.",
				"type": "object",
				"properties": {
					"email": {
						"$ref": "#/components/schemas/User/properties/email"
					}
				},
				"required": [
					"email"
				]
			},
			"ChangeForgotUserPassword": {
				"description": "Endpoint para cambiar la contraseña de un usuario en caso de que no la recuerde.",
				"type": "object",
				"properties": {
					"password": {
						"$ref": "#/components/schemas/User/properties/password"
					},
					"token": {
						"description": "Este token se genera cuando se ejecuta el EP **/api/user/forgot-pass**. Para mas informacion ver el EP nombrado."
					}
				}
			}
		},
		"securitySchemes": {
			"ApiKey": {
				"type": "apiKey",
				"in": "header",
				"name": "admin",
				"description": "The middleware admin"
			}
		},
		"parameters": {
			"id": {
				"name": "id",
				"in": "path",
				"schema": {
					"type": "string",
					"example": "d555345345345as67a342a"
				},
				"required": true,
				"description": "The unique identifier of the item"
			},
			"skuId": {
				"name": "id",
				"in": "path",
				"schema": {
					"type": "string",
					"example": "d555345345345as67a368c"
				},
				"required": true,
				"description": "The SKU ID. This refer to the `id` of the **Sku** Entity. See [Sku](/v2/service/catalog#tag/Sku).\n"
			},
			"ListSortDirection": {
				"name": "sortDirection",
				"in": "query",
				"description": "The direction to sort by",
				"required": false,
				"schema": {
					"type": "string",
					"enum": [
						"asc",
						"desc"
					]
				}
			},
			"ListPageNumber": {
				"name": "x-janis-page",
				"in": "header",
				"description": "The page to get",
				"required": false,
				"schema": {
					"type": "integer",
					"default": 1,
					"minimum": 0,
					"exclusiveMinimum": true
				}
			},
			"ListPageSize": {
				"name": "x-janis-page-size",
				"in": "header",
				"description": "The page size to get",
				"required": false,
				"schema": {
					"type": "integer",
					"default": 60,
					"minimum": 0,
					"exclusiveMinimum": true
				}
			},
			"JanisEntity": {
				"name": "janis-entity",
				"in": "header",
				"description": "The entity name",
				"required": true,
				"schema": {
					"type": "string"
				}
			}
		},
		"headers": {
			"x-janis-total": {
				"description": "The total amount of records in the list",
				"schema": {
					"type": "integer",
					"minimum": 0
				}
			}
		},
		"responses": {
			"GenericSuccess": {
				"description": "Operation succeeded",
				"content": {
					"application/json": {
						"schema": {
							"type": "object"
						}
					}
				}
			},
			"SuccessResponse": {
				"description": "A general success response (200)",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string",
									"description": "A message for success response",
									"example": "Success response"
								}
							}
						}
					}
				}
			},
			"SuccessCreateResponse": {
				"description": "The item was created",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/components/schemas/id"
								}
							}
						}
					}
				}
			},
			"SuccessCreateCollaboratorResponse": {
				"description": "The collaborator user was created",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/components/schemas/id"
								},
								"password": {
									"$ref": "#/components/schemas/password"
								},
								"message": {
									"type": "string",
									"description": "A message for success response",
									"example": "success"
								},
								"code": {
									"type": "number",
									"description": "Internal code",
									"example": 2
								}
							}
						}
					}
				}
			},
			"SuccessEditCollaboratorResponse": {
				"description": "The collaborator user was edited",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"userEdited": {
									"$ref": "#/components/schemas/id"
								},
								"message": {
									"type": "string",
									"description": "A message for success response",
									"example": "success"
								},
								"code": {
									"type": "number",
									"description": "Internal code",
									"example": 2
								}
							}
						}
					}
				}
			},
			"SuccessDeleteUserResponse": {
				"description": "The user was deleted",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"userDeleted": {
									"$ref": "#/components/schemas/id"
								},
								"message": {
									"type": "string",
									"description": "A message for success deleted",
									"example": "success"
								},
								"code": {
									"type": "number",
									"description": "Internal code",
									"example": 2
								}
							}
						}
					}
				}
			},
			"SuccessCreateLegislationResponse": {
				"description": "The legislation was created",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/components/schemas/id"
								},
								"message": {
									"type": "string",
									"description": "A message for success response",
									"example": "success"
								},
								"code": {
									"type": "number",
									"description": "Internal code",
									"example": 2
								}
							}
						}
					}
				}
			},
			"SuccessGetAllLegislationsResponse": {
				"description": "all legislations",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string",
									"example": "success"
								},
								"code": {
									"type": "number",
									"example": 2
								},
								"legislationGetted": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Legislation"
									}
								}
							}
						}
					}
				}
			},
			"SuccessGetAllAreasResponse": {
				"description": "all areas",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string",
									"example": "success"
								},
								"code": {
									"type": "number",
									"example": 2
								},
								"areaGetted": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Area"
									}
								}
							}
						}
					}
				}
			},
			"SuccessDeleteLegislationResponse": {
				"description": "the legislation was deleted",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"legislationDeleted": {
									"$ref": "#/components/schemas/id"
								},
								"message": {
									"type": "string",
									"description": "A message for success response",
									"example": "success"
								},
								"code": {
									"type": "number",
									"description": "Internal code",
									"example": 2
								}
							}
						}
					}
				}
			},
			"SuccessDeleteAreaResponse": {
				"description": "the area was deleted",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"areaDeleted": {
									"$ref": "#/components/schemas/id"
								},
								"message": {
									"type": "string",
									"description": "A message for success response",
									"example": "success"
								},
								"code": {
									"type": "number",
									"description": "Internal code",
									"example": 2
								}
							}
						}
					}
				}
			},
			"SuccessLoginResponse": {
				"description": "Succes Login!",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"description": "mensaje exitoso",
									"type": "string",
									"example": "success"
								},
								"token": {
									"description": "token encriptado con los datos del logueo. Para desencriptar utilizar -> jwt.verify(response.token, process.env.KEY_PRELOGIN))",
									"type": "string",
									"example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyMGU1OTNlNGRlNDVjOTA1NGJmOWRhZCIsImVtYWlsIjoibWFyY29zQHZlcmEuY29tIiwibmFtZSI6Im1hcmNvcyIsImxhc3RuYW1lIjoidmVyYSIsInN0YXR1cyI6ImFjdGl2ZSIsImlzQWRtaW4iOnRydWUsImlhdCI6MTY0NTExNTc4NX0.Fw0fBmleg2hY2QGYLxlxgXi5zs8YNiz1tc1VSCSDXRM"
								},
								"code": {
									"description": "codigo de estado",
									"type": "number",
									"example": 2
								}
							}
						}
					}
				}
			},
			"successCreateAreaResponse": {
				"description": "Area Created",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"description": "mensaje exitoso",
									"type": "string",
									"example": "success"
								},
								"areaCreated": {
									"description": "Id del area creada en la base de datos",
									"type": "string",
									"example": "6216841c66331fc958369a8b"
								},
								"code": {
									"description": "codigo de estado",
									"type": "number",
									"example": 2
								}
							}
						}
					}
				}
			},
			"succesCreateKeywordResponse": {
				"description": "Keyword created",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"description": "mensaje exitoso",
									"type": "string",
									"example": "success"
								},
								"areaModified": {
									"description": "Id del area modificada en la base de datos",
									"type": "string",
									"example": "6216841c66331fc958369a8b"
								},
								"code": {
									"description": "codigo de estado",
									"type": "number",
									"example": 2
								},
								"keywordCreated": {
									"description": "la palabra clave que se creo",
									"type": "string",
									"example": "vacunacion"
								}
							}
						}
					}
				}
			},
			"SuccessChangeUserPasswordResponse": {
				"description": "Change the password of a user",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"user": {
									"$ref": "#/components/schemas/id"
								},
								"message": {
									"type": "string",
									"description": "A message for success response",
									"example": "success"
								},
								"code": {
									"type": "number",
									"description": "Internal code",
									"example": 2
								}
							}
						}
					}
				}
			},
			"SuccesForgotPassword": {
				"description": "Send Email for password reset",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string",
									"description": "A message for success response",
									"example": "Por favor verifica tu correo para finalizar el reestablecimiento de contraseña"
								},
								"code": {
									"type": "number",
									"description": "Internal code",
									"example": 2
								}
							}
						}
					}
				}
			},
			"SuccesChangePasswordForgot": {
				"description": "Change the password of a user.",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string",
									"description": "A message for success response",
									"example": "Changed password successfully"
								},
								"code": {
									"type": "number",
									"description": "Internal code",
									"example": 2
								}
							}
						}
					}
				}
			},
			"SuccesGetUsersResponse": {
				"description": "Get users",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string",
									"description": "A message for success response",
									"example": "success"
								},
								"code": {
									"type": "number",
									"description": "Internal code",
									"example": 2
								},
								"usersGetted": {
									"type": "array",
									"description": "Array of users",
									"items": {
										"$ref": "#/components/schemas/User"
									}
								}
							}
						}
					}
				}
			},
			"notFoundUsersResponse": {
				"description": "No users found",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string",
									"description": "A message for bad response",
									"example": "Users not found"
								},
								"code": {
									"type": "number",
									"description": "Internal code",
									"example": 1
								}
							}
						}
					}
				}
			},
			"notFoundLegislationsResponse": {
				"description": "No legislations found",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string",
									"description": "A message for bad response",
									"example": "legislations not found"
								},
								"code": {
									"type": "number",
									"description": "Internal code",
									"example": 1
								}
							}
						}
					}
				}
			},
			"notFoundAreasResponse": {
				"description": "No areas found",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string",
									"description": "A message for bad response",
									"example": "Any areas found!"
								},
								"code": {
									"type": "number",
									"description": "Internal code",
									"example": 1
								}
							}
						}
					}
				}
			},
			"SuccessCreateDocumentResponse": {
				"description": "The item was updated",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string",
									"description": "A message for bad response",
									"example": "Success"
								},
								"documentInserted": {
									"type": "string",
									"description": "ID of document Created",
									"example": "623ccc0c3a7d0706459c3c97"
								}
							}
						}
					}
				}
			},
			"SuccessGetDocumentsResponse": {
				"description": "The documents getted",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string",
									"description": "A message for bad response",
									"example": "Success"
								},
								"documentGetted": {
									"type": "array",
									"description": "Array of documents",
									"items": {
										"$ref": "#/components/schemas/Document"
									}
								}
							}
						}
					}
				}
			},
			"SuccessUpdateResponse": {
				"description": "The item was updated",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"id": {
									"$ref": "#/components/schemas/id"
								}
							}
						}
					}
				}
			},
			"BadRequest": {
				"description": "A client error has ocurred.",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"description": "A message explaining the error",
									"type": "string"
								}
							}
						}
					}
				}
			},
			"Unauthorized": {
				"description": "Authentication missing or invalid",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"description": "A message explaining the error",
									"type": "string"
								}
							}
						}
					}
				}
			},
			"Forbidden": {
				"description": "Not authorized request",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"description": "A message explaining the error",
									"type": "string"
								}
							}
						}
					}
				}
			},
			"InternalError": {
				"description": "A server error has ocurred."
			},
			"NotFound": {
				"description": "An item is not Found.",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"description": "A message explaining the error",
									"type": "string"
								}
							}
						}
					}
				}
			},
			"BatchResponse": {
				"description": "Batch responses",
				"headers": {
					"x-janis-total-created": {
						"description": "The total amount of items created",
						"schema": {
							"type": "integer",
							"minimum": 0
						}
					},
					"x-janis-total-updated": {
						"description": "The total amount of items updated",
						"schema": {
							"type": "integer",
							"minimum": 0
						}
					},
					"x-janis-total-not-modified": {
						"description": "The total amount of items not modified",
						"schema": {
							"type": "integer",
							"minimum": 0
						}
					},
					"x-janis-total-error": {
						"description": "The total amount of items with error",
						"schema": {
							"type": "integer",
							"minimum": 0
						}
					}
				},
				"content": {
					"application/json": {
						"schema": {
							"description": "item Batch response",
							"type": "object",
							"properties": {
								"itemsCreated": {
									"description": "Items which were created succesfully.  \n- The *key* of the *object* is the `referenceId` of the created item.\n- The *value* of the *object* is the `id` of the created item.\n",
									"type": "object",
									"example": {
										"item-ref-id-1": "5ec694b11b252473bad6f170",
										"item-ref-id-2": "5ec694b11b252473bad6f171"
									}
								},
								"itemsUpdated": {
									"description": "Items which were updated succesfully.  \n- The *key* of the *object* is the `referenceId` of the updated item.\n- The *value* of the *object* is the `id` of the updated item.\n",
									"type": "object",
									"example": {
										"item-ref-id-3": "606606782e232624c18f1c18",
										"item-ref-id-4": "6066067ff04765697cdd4d9a"
									}
								},
								"itemsNotModified": {
									"description": "Items that did not need to be modified.  \nThis occurs when the item in the service **is equal** to the received item.\n- The *key* of the *object* is the `referenceId` of the non modified item.\n- The *value* of the *object* is the `id` of the non modified item.\n",
									"type": "object",
									"example": {
										"item-ref-id-5": "606606827c96a136ead9065e",
										"item-ref-id-6": "60660686f42efcf71529e69d"
									}
								},
								"itemsError": {
									"description": "Items with some error.  \n- The *key* of the *object* is the `referenceId` of the item.\n- The *value* of the *object* is the validation message error.\n",
									"type": "object",
									"example": {
										"item-ref-id-7": "Invalid Accounts"
									}
								}
							}
						}
					}
				}
			}
		}
	}
}