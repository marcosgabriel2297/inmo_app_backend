openapi: 3.0.0
info:
  title: Inmobiliaria APP
  description: Manage Properties, Inmobiliarias, Owners
  version: 1.6.0
  x-logo:
    url: "https://i.ytimg.com/vi/HN5SvaGIa3E/hqdefault.jpg"
    altText: Inmobiliaria APP messirve

tags:
  - name: Inmobiliaria
    description: For managing Inmobiliaria
  - name: Owner
    description: For managing Owner
  - name: Property
    description: For managing Legislation
  - name: User
    description: For managing User

servers:
  - url: "--*TODAVIA NO HAY SERVER DE PROD*--"
    description: The Prod API server
    variables:
      environment:
        default: prod

  - url: "localhost:6969"
    description: The Local API server
    variables:
      environment:
        default: local

paths: {}

components:
  schemas:
    id:
      description: The unique identifier of the item
      type: string
      readOnly: true
      example: d555345345345as67a342a

    status:
      description: The item status
      type: string
      default: active
      enum:
        - active
        - inactive
      example: active

    date:
      description: The date of creation
      type: string
      format: date-time
      readOnly: true
      example: 2019-07-12T19:59:51.801Z

  securitySchemes:
    tokenLogin:
      type: apiKey
      in: header
      name: admin
      description: The middleware admin

  parameters:
    id:
      name: id
      in: path
      schema:
        type: string
        example: d555345345345as67a342a
      required: true
      description: The unique identifier of the item

  headers:
    x-janis-total:
      description: The total amount of records in the list
      schema:
        type: integer
        minimum: 0

  responses:

    SuccessLoginResponse:
      description: Succes Login!
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                description: mensaje exitoso
                type: string
                example: success
              token:
                description: token encriptado con los datos del logueo. Para desencriptar utilizar -> jwt.verify(response.token, process.env.KEY_PRELOGIN))
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyMGU1OTNlNGRlNDVjOTA1NGJmOWRhZCIsImVtYWlsIjoibWFyY29zQHZlcmEuY29tIiwibmFtZSI6Im1hcmNvcyIsImxhc3RuYW1lIjoidmVyYSIsInN0YXR1cyI6ImFjdGl2ZSIsImlzQWRtaW4iOnRydWUsImlhdCI6MTY0NTExNTc4NX0.Fw0fBmleg2hY2QGYLxlxgXi5zs8YNiz1tc1VSCSDXRM
              code:
                description: codigo de estado
                type: number
                example: 2

    SuccessCreatePropertyResponse:
      description: Creacion de una propiedad
      content:
        application/json:
          schema:
            type: object
            properties:
              propertyInserted:
                $ref: "#/components/schemas/id"