components:
  schemas:
    User:
      description: Un usuario
      type: object
      properties:
        id:
          $ref: "#/components/schemas/id"
        name:
          description: El nombre del usuario
          type: string
          example: Peter
        lastname:
          description: El apellido del usuario
          type: string
          example: Parker
        email:
          description: El email del usuario
          type: string
          example: peterparker@spiderman.com
        password:
          description: La contraseña del usuario, que está encriptada con bcrypt.
          type: string
          example: $2b$12$WGI2R5P.MzTDAl6vS3s5JuaX6NgB0cqHGkozfKdkC4FsHoMHvAgQ6
        status:
          $ref: "#/components/schemas/status"
        isAdmin:
          description: Esta variable indica si el usuario es admin o no. En caso de false es colaborador
          type: boolean
          example: true

    LoginUser:
      description: Logueo de user
      type: object
      properties:
        email:
          $ref: "#/components/schemas/User/properties/email"
        password:
          $ref: "#/components/schemas/User/properties/password"

      required:
        - email
        - password

    CollaboratorUser:
      description: Creacion usuario colaborador
      type: object
      properties:
        name:
          $ref: "#/components/schemas/User/properties/email"
        lastname:
          $ref: "#/components/schemas/User/properties/lastname"
        email:
          $ref: "#/components/schemas/User/properties/email"
        isAdmin:
          $ref: "#/components/schemas/User/properties/isAdmin"
      required:
        - name
        - lastname
        - email

    CollaboratorUserEdit:
      description: Edicion usuario colaborador
      type: object
      properties:
        name:
          $ref: "#/components/schemas/User/properties/name"
        lastname:
          $ref: "#/components/schemas/User/properties/lastname"
        email:
          $ref: "#/components/schemas/User/properties/email"
        isAdmin:
          $ref: "#/components/schemas/User/properties/isAdmin"
      required:
        - name
        - lastname
        - email

    ChangeUserPassword:
      description: Endpoint para cambiar la contraseña de un usuario
      type: object
      properties:
        email:
          $ref: "#/components/schemas/User/properties/email"
        password:
          $ref: "#/components/schemas/User/properties/password"
        newPassword:
          description: La nueva contraseña que se va a actualizar
          type: string
          example: thebatman
      required:
        - email
        - password
        - newPassword

    ForgotUserPassword:
      description: Endpoint que se utiliza para enviar un email al usuario para cambiar su password.
      type: object
      properties:
        email:
          $ref: "#/components/schemas/User/properties/email"
      required:
        - email

    ChangeForgotUserPassword:
      description: Endpoint para cambiar la contraseña de un usuario en caso de que no la recuerde.
      type: object
      properties:
        password:
          $ref: "#/components/schemas/User/properties/password"
        token:
          description: Este token se genera cuando se ejecuta el EP **/api/user/forgot-pass**. Para mas informacion ver el EP nombrado.
